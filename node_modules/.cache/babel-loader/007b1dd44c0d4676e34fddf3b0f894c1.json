{"ast":null,"code":"import { combineReducers } from 'redux';\nlet bankInfo = {\n  accounts: [{\n    \"_id\": 1,\n    \"name\": \"Lannisters\",\n    \"balance\": 1189.78\n  }, {\n    \"_id\": 2,\n    \"name\": \"Starks\",\n    \"balance\": 567.71\n  }, {\n    \"_id\": 3,\n    \"name\": \"Baratheons\",\n    \"balance\": 31.26\n  }, {\n    \"_id\": 4,\n    \"name\": \"Targaryens\",\n    \"balance\": 34.75\n  }, {\n    \"_id\": 5,\n    \"name\": \"Greyjoys\",\n    \"balance\": 9.03\n  }, {\n    \"_id\": 6,\n    \"name\": \"Tyrells\",\n    \"balance\": 1133.45\n  }, {\n    \"_id\": 7,\n    \"name\": \"Martells\",\n    \"balance\": 737.9\n  }, {\n    \"_id\": 8,\n    \"name\": \"Tullys\",\n    \"balance\": 483.56\n  }, {\n    \"_id\": 9,\n    \"name\": \"Arryns\",\n    \"balance\": 1035.83\n  }, {\n    \"_id\": 10,\n    \"name\": \"Free Folk\",\n    \"balance\": -134.34\n  }],\n  transaction: []\n};\n\nconst renderNewState = state => {\n  let newState = { ...state\n  };\n  return newState;\n};\n\nconst activityReducer = (state, action) => {\n  switch (action.type) {\n    case 'DEPOSIT_MONEY':\n      var indexFound = state.accounts.findIndex(account => account.id === action.payload);\n      let balance = parseFloat(state.accounts[indexFound].balance);\n      let deposit = parseFloat(action.payload.amount);\n      balance += deposit;\n      state.accounts[indexFound].balance = balance;\n      console.log(state.accounts[indexFound].balance = balance);\n      state.transaction.push(action.payload);\n      return {\n        accounts: [...state.accounts],\n        transaction: [...state.transaction]\n      };\n    //let balance = parseFloat(state.accounts[action.payload.accountId-1].balance);\n\n    /*let deposit = parseFloat(action.payload.amount);\n    balance += deposit\n    state.accounts[action.payload.accountId-1].balance = balance;\n    console.log(state.accounts[action.payload.accountId-1].balance = balance);\n    state.transaction.push(action.payload);\n    return {accounts:[...state.accounts],transaction:[...state.transaction]};*/\n\n    case 'WITHDRAW_MONEY':\n      let balance2 = parseFloat(state.accounts[action.payload.accountId - 1].balance);\n      let withdrawal = parseFloat(action.payload.amount);\n      balance2 -= withdrawal;\n      state.accounts[action.payload.accountId - 1].balance = balance2;\n      state.transaction.push(action.payload);\n      return {\n        accounts: [...state.accounts],\n        transaction: [...state.transaction]\n      };\n\n    case 'DELETE_ACCOUNT':\n      const characterIndex = state.accounts.findIndex(char => char.id === action.payload);\n      state.accounts.splice(characterIndex, 1);\n      return {\n        accounts: [...state.accounts],\n        transaction: [...state.transaction]\n      };\n\n    default:\n      return !state ? renderNewState(bankInfo) : state;\n  }\n};\n\nexport default combineReducers({\n  bankInfo: activityReducer\n});","map":{"version":3,"sources":["/Users/zshop/Google Drive/SPRING2020/IS322/banking-application/src/reducers/index.js"],"names":["combineReducers","bankInfo","accounts","transaction","renderNewState","state","newState","activityReducer","action","type","indexFound","findIndex","account","id","payload","balance","parseFloat","deposit","amount","console","log","push","balance2","accountId","withdrawal","characterIndex","char","splice"],"mappings":"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","sourcesContent":["import { combineReducers } from 'redux';\n\nlet bankInfo = {\n    accounts:[\n        {\n          \"_id\": 1,\n          \"name\": \"Lannisters\",\n          \"balance\": 1189.78\n        },\n        {\n          \"_id\": 2,\n          \"name\": \"Starks\",\n          \"balance\": 567.71\n        },\n        {\n          \"_id\": 3,\n          \"name\": \"Baratheons\",\n          \"balance\": 31.26\n        },\n        {\n          \"_id\": 4,\n          \"name\": \"Targaryens\",\n          \"balance\": 34.75\n        },\n        {\n          \"_id\": 5,\n          \"name\": \"Greyjoys\",\n          \"balance\": 9.03\n        },\n        {\n          \"_id\": 6,\n          \"name\": \"Tyrells\",\n          \"balance\": 1133.45\n        },\n        {\n          \"_id\": 7,\n          \"name\": \"Martells\",\n          \"balance\": 737.9\n        },\n        {\n          \"_id\": 8,\n          \"name\": \"Tullys\",\n          \"balance\": 483.56\n        },\n        {\n          \"_id\": 9,\n          \"name\": \"Arryns\",\n          \"balance\": 1035.83\n        },\n        {\n          \"_id\": 10,\n          \"name\": \"Free Folk\",\n          \"balance\": -134.34\n        }\n    ],\n    transaction:[]\n};\nconst renderNewState = (state) => {\n  let newState = {...state};\n  return newState;\n}\n\n\nconst activityReducer = (state, action) => {\n    switch (action.type) {\n        case 'DEPOSIT_MONEY':\n          var indexFound = state.accounts.findIndex(account => account.id === action.payload);\n          let balance = parseFloat(state.accounts[indexFound].balance);\n          let deposit = parseFloat(action.payload.amount);\n          balance += deposit;\n          state.accounts[indexFound].balance = balance;\n          console.log(state.accounts[indexFound].balance = balance);\n          state.transaction.push(action.payload);\n          return {accounts:[...state.accounts],transaction:[...state.transaction]};\n          //let balance = parseFloat(state.accounts[action.payload.accountId-1].balance);\n          /*let deposit = parseFloat(action.payload.amount);\n          balance += deposit\n          state.accounts[action.payload.accountId-1].balance = balance;\n          console.log(state.accounts[action.payload.accountId-1].balance = balance);\n          state.transaction.push(action.payload);\n          return {accounts:[...state.accounts],transaction:[...state.transaction]};*/\n        case 'WITHDRAW_MONEY':\n          let balance2 = parseFloat(state.accounts[action.payload.accountId-1].balance);\n          let withdrawal = parseFloat(action.payload.amount);\n          balance2 -= withdrawal\n          state.accounts[action.payload.accountId-1].balance = balance2;\n          state.transaction.push(action.payload);\n          return {accounts:[...state.accounts],transaction:[...state.transaction]};\n        case 'DELETE_ACCOUNT':\n          const characterIndex = state.accounts.findIndex(char => char.id === action.payload);\n          state.accounts.splice(characterIndex, 1);\n          return {accounts:[...state.accounts],transaction:[...state.transaction]};\n        default:\n            return !state ? renderNewState(bankInfo) : state;\n    }\n}\n\nexport default combineReducers({\n    bankInfo: activityReducer\n});"]},"metadata":{},"sourceType":"module"}