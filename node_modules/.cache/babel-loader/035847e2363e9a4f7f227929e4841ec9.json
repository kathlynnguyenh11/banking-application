{"ast":null,"code":"var _jsxFileName = \"/Users/zshop/Google Drive/SPRING2020/IS322/banking-app/src/components/App.js\";\nimport React from 'react';\nconst LARGE_DESKTOP_BREAKPOINT = 1366;\nconst SMALL_DESKTOP_BREAKPOINT = 1024;\nconst TABLET_BREAKPOINT = 768;\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      browserWidth: 0,\n      breakpoint: 'large-desktop',\n      view: 'GridView'\n    };\n\n    this.handleResize = () => {\n      const browserWidth = window.innerWidth;\n      let breakpoint = 'large-desktop';\n\n      if (browserWidth < LARGE_DESKTOP_BREAKPOINT && browserWidth >= SMALL_DESKTOP_BREAKPOINT) {\n        breakpoint = 'small-desktop';\n      } else if (browserWidth < SMALL_DESKTOP_BREAKPOINT && browserWidth >= TABLET_BREAKPOINT) {\n        breakpoint = 'tablet';\n      } else if (browserWidth < TABLET_BREAKPOINT) {\n        breakpoint = 'mobile';\n      }\n\n      this.setState({\n        breakpoint,\n        browserWidth\n      });\n    };\n  }\n\n  componentDidMount() {\n    window.addEventListener('resize', this.handleResize);\n    this.handleResize();\n  }\n\n  onViewChange(view) {\n    this.setState({\n      view\n    });\n  }\n\n  wrapPage(jsx) {\n    const {\n      view\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: `container ${this.state.breakpoint}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(PageTabs, {\n      currentView: view,\n      onViewChange: this.onViewChange.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 13\n      }\n    }), jsx);\n  }\n\n  render() {\n    const {\n      view\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 7\n      }\n    }, \"Hello World\");\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/zshop/Google Drive/SPRING2020/IS322/banking-app/src/components/App.js"],"names":["React","LARGE_DESKTOP_BREAKPOINT","SMALL_DESKTOP_BREAKPOINT","TABLET_BREAKPOINT","App","Component","state","browserWidth","breakpoint","view","handleResize","window","innerWidth","setState","componentDidMount","addEventListener","onViewChange","wrapPage","jsx","bind","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAGA,MAAMC,wBAAwB,GAAG,IAAjC;AACA,MAAMC,wBAAwB,GAAG,IAAjC;AACA,MAAMC,iBAAiB,GAAG,GAA1B;;AAEA,MAAMC,GAAN,SAAkBJ,KAAK,CAACK,SAAxB,CAAkC;AAAA;AAAA;AAAA,SAChCC,KADgC,GACxB;AACNC,MAAAA,YAAY,EAAE,CADR;AAENC,MAAAA,UAAU,EAAE,eAFN;AAGNC,MAAAA,IAAI,EAAE;AAHA,KADwB;;AAAA,SAYhCC,YAZgC,GAYjB,MAAM;AACnB,YAAMH,YAAY,GAAGI,MAAM,CAACC,UAA5B;AACA,UAAIJ,UAAU,GAAG,eAAjB;;AAEA,UAAID,YAAY,GAAGN,wBAAf,IAA2CM,YAAY,IAAIL,wBAA/D,EAAyF;AACvFM,QAAAA,UAAU,GAAG,eAAb;AACD,OAFD,MAEO,IAAID,YAAY,GAAGL,wBAAf,IAA2CK,YAAY,IAAIJ,iBAA/D,EAAkF;AACvFK,QAAAA,UAAU,GAAG,QAAb;AACD,OAFM,MAEA,IAAID,YAAY,GAAGJ,iBAAnB,EAAsC;AAC3CK,QAAAA,UAAU,GAAG,QAAb;AACD;;AAED,WAAKK,QAAL,CAAc;AAAEL,QAAAA,UAAF;AAAcD,QAAAA;AAAd,OAAd;AACD,KAzB+B;AAAA;;AAOhCO,EAAAA,iBAAiB,GAAG;AAClBH,IAAAA,MAAM,CAACI,gBAAP,CAAwB,QAAxB,EAAkC,KAAKL,YAAvC;AACA,SAAKA,YAAL;AACD;;AAiBDM,EAAAA,YAAY,CAACP,IAAD,EAAM;AACd,SAAKI,QAAL,CAAc;AAACJ,MAAAA;AAAD,KAAd;AACH;;AAEDQ,EAAAA,QAAQ,CAACC,GAAD,EAAK;AACT,UAAM;AAACT,MAAAA;AAAD,QAAS,KAAKH,KAApB;AACA,wBACI;AAAK,MAAA,SAAS,EAAG,aAAY,KAAKA,KAAL,CAAWE,UAAW,EAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,QAAD;AAAU,MAAA,WAAW,EAAGC,IAAxB;AACQ,MAAA,YAAY,EAAG,KAAKO,YAAL,CAAkBG,IAAlB,CAAuB,IAAvB,CADvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAGGD,GAHH,CADJ;AAOH;;AACDE,EAAAA,MAAM,GAAG;AACP,UAAM;AAACX,MAAAA;AAAD,QAAS,KAAKH,KAApB;AACA,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF;AAMD;;AAjD+B;;AAoDlC,eAAeF,GAAf","sourcesContent":["import React from 'react';\n\n\nconst LARGE_DESKTOP_BREAKPOINT = 1366;\nconst SMALL_DESKTOP_BREAKPOINT = 1024;\nconst TABLET_BREAKPOINT = 768;\n\nclass App extends React.Component {\n  state = {\n    browserWidth: 0,\n    breakpoint: 'large-desktop',\n    view: 'GridView'\n  }\n\n  componentDidMount() {\n    window.addEventListener('resize', this.handleResize);\n    this.handleResize();\n  }\n\n  handleResize = () => {\n    const browserWidth = window.innerWidth;\n    let breakpoint = 'large-desktop';\n\n    if (browserWidth < LARGE_DESKTOP_BREAKPOINT && browserWidth >= SMALL_DESKTOP_BREAKPOINT) {\n      breakpoint = 'small-desktop';\n    } else if (browserWidth < SMALL_DESKTOP_BREAKPOINT && browserWidth >= TABLET_BREAKPOINT) {\n      breakpoint = 'tablet';\n    } else if (browserWidth < TABLET_BREAKPOINT) {\n      breakpoint = 'mobile';\n    }\n\n    this.setState({ breakpoint, browserWidth });\n  }\n\n  onViewChange(view){\n      this.setState({view});\n  }\n\n  wrapPage(jsx){\n      const {view} = this.state;\n      return (\n          <div className={`container ${this.state.breakpoint}`}>\n            <PageTabs currentView={ view }\n                    onViewChange={ this.onViewChange.bind(this)} />\n            {jsx}\n          </div>\n      );\n  }\n  render() {\n    const {view} = this.state\n    return(\n      <div>\n        Hello World\n      </div>\n    )\n    \n  }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}