{"ast":null,"code":"import { combineReducers } from 'redux';\nlet bankInfo = {\n  accounts: [{\n    \"_id\": 1,\n    \"name\": \"Lannisters\",\n    \"balance\": 1189.78\n  }, {\n    \"_id\": 2,\n    \"name\": \"Starks\",\n    \"balance\": 567.71\n  }, {\n    \"_id\": 3,\n    \"name\": \"Baratheons\",\n    \"balance\": 31.26\n  }, {\n    \"_id\": 4,\n    \"name\": \"Targaryens\",\n    \"balance\": 34.75\n  }, {\n    \"_id\": 5,\n    \"name\": \"Greyjoys\",\n    \"balance\": 9.03\n  }, {\n    \"_id\": 6,\n    \"name\": \"Tyrells\",\n    \"balance\": 1133.45\n  }, {\n    \"_id\": 7,\n    \"name\": \"Martells\",\n    \"balance\": 737.9\n  }, {\n    \"_id\": 8,\n    \"name\": \"Tullys\",\n    \"balance\": 483.56\n  }, {\n    \"_id\": 9,\n    \"name\": \"Arryns\",\n    \"balance\": 1035.83\n  }, {\n    \"_id\": 10,\n    \"name\": \"Free Folk\",\n    \"balance\": -134.34\n  }],\n  transaction: []\n};\n\nconst renderNewState = state => {\n  let newState = { ...state\n  };\n  return newState;\n};\n\nconst activityReducer = (state, action) => {\n  switch (action.type) {\n    case 'DEPOSIT_MONEY':\n      /*let newState = {...state};\n      let balance = parseFloat(newState.accounts[action.payload.accountId-1].balance);\n      console.log(\"old balance\")\n      console.log(balance)\n      let deposit = parseFloat(action.payload.amount);\n      balance += deposit\n      console.log(\"New balance\");\n      console.log(balance)\n      newState.accounts[action.payload.accountId-1].balance = balance;\n      console.log(newState.accounts[action.payload.accountId-1].balance)\n      console.log(\"newState\");\n      console.log(newState)\n        \n      newState.transaction.push(action.payload);\n      return {accounts: newState.accounts,transaction:newState.transaction}*/\n      let balance = parseFloat(state.accounts[action.payload.accountId - 1].balance);\n      let deposit = parseFloat(action.payload.amount);\n      balance += deposit;\n      state.accounts[action.payload.accountId - 1].balance = balance;\n      console.log(\"Added\");\n      console.log(state.accounts[action.payload.accountId - 1].balance);\n      console.log(state);\n      state.transaction.push(action.payload);\n      return {\n        accounts: [...state.accounts],\n        transaction: [...state.transaction]\n      };\n\n    case 'WITHDRAW_MONEY':\n      /*let newState2 = {...state};\n      let balance2 = parseFloat(newState2.accounts[action.payload.accountId-1].balance);\n      let withdrawal = parseFloat(action.payload.amount);\n      balance2 = balance2 - withdrawal;\n      console.log(\"New balance\");\n      console.log(balance2)\n      newState2.accounts[action.payload.accountId-1].balance = balance2;\n      console.log(\"newState\");\n      console.log(newState2)\n      newState2.transaction.push(action.payload);\n      return {accounts: newState2.accounts,transaction:newState2.transaction}*/\n      let balance2 = parseFloat(state.accounts[action.payload.accountId - 1].balance);\n      let withdrawal = parseFloat(action.payload.amount);\n      balance2 -= withdrawal;\n      state.accounts[action.payload.accountId - 1].balance = balance2;\n      console.log(\"Added\");\n      console.log(state.accounts[action.payload.accountId - 1].balance);\n      console.log(state);\n      state.transaction.push(action.payload);\n      return {\n        accounts: [...state.accounts],\n        transaction: [...state.transaction]\n      };\n\n    default:\n      return !state ? renderNewState(bankInfo) : state;\n  }\n};\n\nexport default combineReducers({\n  bankInfo: activityReducer\n});","map":{"version":3,"sources":["/Users/zshop/Google Drive/SPRING2020/IS322/banking-application/src/reducers/index.js"],"names":["combineReducers","bankInfo","accounts","transaction","renderNewState","state","newState","activityReducer","action","type","balance","parseFloat","payload","accountId","deposit","amount","console","log","push","balance2","withdrawal"],"mappings":"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","sourcesContent":["import { combineReducers } from 'redux';\n\nlet bankInfo = {\n    accounts:[\n        {\n          \"_id\": 1,\n          \"name\": \"Lannisters\",\n          \"balance\": 1189.78\n        },\n        {\n          \"_id\": 2,\n          \"name\": \"Starks\",\n          \"balance\": 567.71\n        },\n        {\n          \"_id\": 3,\n          \"name\": \"Baratheons\",\n          \"balance\": 31.26\n        },\n        {\n          \"_id\": 4,\n          \"name\": \"Targaryens\",\n          \"balance\": 34.75\n        },\n        {\n          \"_id\": 5,\n          \"name\": \"Greyjoys\",\n          \"balance\": 9.03\n        },\n        {\n          \"_id\": 6,\n          \"name\": \"Tyrells\",\n          \"balance\": 1133.45\n        },\n        {\n          \"_id\": 7,\n          \"name\": \"Martells\",\n          \"balance\": 737.9\n        },\n        {\n          \"_id\": 8,\n          \"name\": \"Tullys\",\n          \"balance\": 483.56\n        },\n        {\n          \"_id\": 9,\n          \"name\": \"Arryns\",\n          \"balance\": 1035.83\n        },\n        {\n          \"_id\": 10,\n          \"name\": \"Free Folk\",\n          \"balance\": -134.34\n        }\n    ],\n    transaction:[]\n};\nconst renderNewState = (state) => {\n  let newState = {...state};\n  return newState;\n}\nconst activityReducer = (state, action) => {\n    switch (action.type) {\n        case 'DEPOSIT_MONEY':\n          /*let newState = {...state};\n          let balance = parseFloat(newState.accounts[action.payload.accountId-1].balance);\n          console.log(\"old balance\")\n          console.log(balance)\n          let deposit = parseFloat(action.payload.amount);\n          balance += deposit\n          console.log(\"New balance\");\n          console.log(balance)\n          newState.accounts[action.payload.accountId-1].balance = balance;\n          console.log(newState.accounts[action.payload.accountId-1].balance)\n          console.log(\"newState\");\n          console.log(newState)\n            \n          newState.transaction.push(action.payload);\n          return {accounts: newState.accounts,transaction:newState.transaction}*/\n\n          let balance = parseFloat(state.accounts[action.payload.accountId-1].balance);\n          let deposit = parseFloat(action.payload.amount);\n          balance += deposit\n          state.accounts[action.payload.accountId-1].balance = balance;\n          console.log(\"Added\");\n          console.log(state.accounts[action.payload.accountId-1].balance)\n          console.log(state)\n          state.transaction.push(action.payload);\n          return {accounts:[...state.accounts],transaction:[...state.transaction]};\n        case 'WITHDRAW_MONEY':\n          /*let newState2 = {...state};\n          let balance2 = parseFloat(newState2.accounts[action.payload.accountId-1].balance);\n          let withdrawal = parseFloat(action.payload.amount);\n          balance2 = balance2 - withdrawal;\n          console.log(\"New balance\");\n          console.log(balance2)\n          newState2.accounts[action.payload.accountId-1].balance = balance2;\n          console.log(\"newState\");\n          console.log(newState2)\n          newState2.transaction.push(action.payload);\n          return {accounts: newState2.accounts,transaction:newState2.transaction}*/\n          let balance2 = parseFloat(state.accounts[action.payload.accountId-1].balance);\n          let withdrawal = parseFloat(action.payload.amount);\n          balance2 -= withdrawal\n          state.accounts[action.payload.accountId-1].balance = balance2;\n          console.log(\"Added\");\n          console.log(state.accounts[action.payload.accountId-1].balance)\n          console.log(state)\n          state.transaction.push(action.payload);\n          return {accounts:[...state.accounts],transaction:[...state.transaction]};\n\n        default:\n            return !state ? renderNewState(bankInfo) : state;\n    }\n}\n\nexport default combineReducers({\n    bankInfo: activityReducer\n});"]},"metadata":{},"sourceType":"module"}